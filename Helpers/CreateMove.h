uint8_t CrtMoveShell2[] = {
	0x55, 0x89, 0xE5, 0x53, 0x57, 0x56, 0x81, 0xEC, 0xB8, 0x00, 0x00, 0x00,
	0x8B, 0x5D, 0x0C, 0xBA, 0x00, 0x00, 0x00, 0x00, 0x85, 0xDB, 0x0F, 0x84,
	0x15, 0x05, 0x00, 0x00, 0x83, 0x7B, 0x04, 0x00, 0x0F, 0x8E, 0x0B, 0x05,
	0x00, 0x00, 0x8B, 0x42, 0x1C, 0x8B, 0x4A, 0x38, 0x8B, 0x09, 0xC1, 0xE1,
	0x04, 0x8B, 0x3C, 0x08, 0x89, 0xD8, 0xBB, 0x00, 0x00, 0x01, 0x00, 0x23,
	0x58, 0x30, 0x80, 0xBA, 0x40, 0x2B, 0x00, 0x00, 0x00, 0x89, 0x55, 0xEC,
	0x75, 0x2C, 0x85, 0xDB, 0x74, 0x28, 0xC7, 0x85, 0x3C, 0xFF, 0xFF, 0xFF,
	0x32, 0x00, 0x00, 0x00, 0x8B, 0x42, 0x0C, 0x8B, 0x00, 0x8B, 0x80, 0x98,
	0x00, 0x00, 0x00, 0x8B, 0x4A, 0x0C, 0x31, 0xD2, 0x52, 0x52, 0x52, 0xFF,
	0xB5, 0x3C, 0xFF, 0xFF, 0xFF, 0xFF, 0xD0, 0x8B, 0x55, 0xEC, 0xC1, 0xEB,
	0x10, 0x88, 0x9A, 0x40, 0x2B, 0x00, 0x00, 0x31, 0xF6, 0x85, 0xFF, 0x89,
	0x7D, 0xCC, 0x74, 0x18, 0x8B, 0x42, 0x18, 0x80, 0x3C, 0x38, 0x00, 0x8B,
	0x5D, 0x0C, 0x74, 0x1B, 0xC7, 0x45, 0xE4, 0x00, 0x00, 0x00, 0x00, 0xE9,
	0x63, 0x04, 0x00, 0x00, 0xC7, 0x45, 0xE4, 0x00, 0x00, 0x00, 0x00, 0x8B,
	0x5D, 0x0C, 0xE9, 0x54, 0x04, 0x00, 0x00, 0x8B, 0x42, 0x04, 0x83, 0x3C,
	0x38, 0x00, 0x7E, 0xDC, 0x8B, 0x42, 0x10, 0x83, 0x3C, 0x38, 0x00, 0x75,
	0xD3, 0x8B, 0x0A, 0x8B, 0x42, 0x14, 0x8B, 0x52, 0x2C, 0xC5, 0xFA, 0x10,
	0x04, 0x3A, 0xC5, 0xFA, 0x58, 0x04, 0x38, 0xC5, 0xFA, 0x11, 0x45, 0xD0,
	0xC5, 0xFA, 0x10, 0x44, 0x3A, 0x04, 0xC5, 0xFA, 0x58, 0x44, 0x38, 0x04,
	0xC5, 0xFA, 0x11, 0x45, 0xD4, 0xC5, 0xFA, 0x10, 0x44, 0x3A, 0x08, 0xC5,
	0xFA, 0x58, 0x44, 0x38, 0x08, 0xC5, 0xFA, 0x11, 0x45, 0xD8, 0xB0, 0x01,
	0x89, 0x45, 0xE4, 0x85, 0xC9, 0x74, 0x0C, 0x8B, 0x43, 0x30, 0xA8, 0x02,
	0x75, 0x0D, 0x8B, 0x55, 0xEC, 0xEB, 0x2D, 0x8B, 0x55, 0xEC, 0xE9, 0xEC,
	0x03, 0x00, 0x00, 0xF6, 0x04, 0x39, 0x01, 0x8B, 0x55, 0xEC, 0x75, 0x1C,
	0x83, 0xE0, 0xFD, 0x66, 0x83, 0x7B, 0x44, 0x00, 0x78, 0x0B, 0x74, 0x10,
	0xC7, 0x43, 0x28, 0x00, 0x00, 0xE1, 0x43, 0xEB, 0x07, 0xC7, 0x43, 0x28,
	0x00, 0x00, 0xE1, 0xC3, 0x0D, 0x00, 0x00, 0x40, 0x00, 0x89, 0x43, 0x30,
	0xE9, 0xBA, 0x03, 0x00, 0x00, 0x8B, 0x4A, 0x04, 0x83, 0x3C, 0x39, 0x00,
	0x0F, 0x8E, 0xCB, 0x03, 0x00, 0x00, 0x8B, 0x4A, 0x10, 0x83, 0x3C, 0x39,
	0x00, 0x0F, 0x85, 0xBE, 0x03, 0x00, 0x00, 0x8B, 0x4A, 0x34, 0x80, 0x3C,
	0x39, 0x00, 0x0F, 0x85, 0xB1, 0x03, 0x00, 0x00, 0x80, 0x7D, 0xE4, 0x00,
	0x0F, 0x84, 0x69, 0x03, 0x00, 0x00, 0x8B, 0x42, 0x08, 0x85, 0xC0, 0x74,
	0x2C, 0x8B, 0x0C, 0x38, 0x89, 0x4D, 0xF0, 0x69, 0xCE, 0xAC, 0x00, 0x00,
	0x00, 0x89, 0x4D, 0xE0, 0x8B, 0x4D, 0xCC, 0x8B, 0x55, 0xF0, 0x3B, 0x14,
	0x08, 0x8B, 0x45, 0xEC, 0x8B, 0x4D, 0xE0, 0x0F, 0x94, 0x44, 0x08, 0x44,
	0x8B, 0x55, 0xEC, 0x0F, 0x84, 0x41, 0x03, 0x00, 0x00, 0x8B, 0x42, 0x28,
	0x8B, 0x04, 0x38, 0x89, 0x45, 0xBC, 0x85, 0xC0, 0x0F, 0x84, 0x30, 0x03,
	0x00, 0x00, 0x8B, 0x42, 0x20, 0x8B, 0x04, 0x38, 0x85, 0xC0, 0x0F, 0x84,
	0x22, 0x03, 0x00, 0x00, 0x8B, 0x00, 0x85, 0xC0, 0x0F, 0x84, 0x18, 0x03,
	0x00, 0x00, 0x8B, 0x88, 0xB0, 0x00, 0x00, 0x00, 0x89, 0x4D, 0xF0, 0x85,
	0xC9, 0x0F, 0x84, 0x07, 0x03, 0x00, 0x00, 0x8B, 0x4D, 0xF0, 0x8B, 0x4C,
	0x01, 0x08, 0x89, 0x4D, 0xE8, 0x83, 0x7D, 0xE8, 0x00, 0x0F, 0x84, 0xF3,
	0x02, 0x00, 0x00, 0x8B, 0x4D, 0xF0, 0x01, 0xC1, 0x01, 0x4D, 0xE8, 0x31,
	0xC9, 0x31, 0xC0, 0x89, 0x7D, 0xB0, 0x89, 0x4D, 0xC0, 0x89, 0x45, 0xB4,
	0x0F, 0xB6, 0xC0, 0x89, 0xC1, 0xC1, 0xE1, 0x06, 0x8D, 0x0C, 0x81, 0x89,
	0x4D, 0xF0, 0x8B, 0x5D, 0xE8, 0x8B, 0x04, 0x0B, 0x89, 0x45, 0xC4, 0xC7,
	0x45, 0xA8, 0x00, 0x00, 0x00, 0x3F, 0xC5, 0xFA, 0x10, 0x44, 0x0B, 0x08,
	0xC5, 0xFA, 0x10, 0x4C, 0x0B, 0x0C, 0xC5, 0xFA, 0x10, 0x54, 0x0B, 0x10,
	0x69, 0xC6, 0xAC, 0x00, 0x00, 0x00, 0x01, 0xD0, 0x8B, 0x4D, 0xC0, 0x8D,
	0x0C, 0x49, 0x89, 0x4D, 0xC8, 0xC5, 0xFA, 0x11, 0x84, 0x88, 0x8C, 0x00,
	0x00, 0x00, 0xC5, 0xFA, 0x11, 0x8C, 0x88, 0x90, 0x00, 0x00, 0x00, 0xC5,
	0xFA, 0x11, 0x94, 0x88, 0x94, 0x00, 0x00, 0x00, 0x8B, 0x5D, 0xF0, 0x8B,
	0x4D, 0xE8, 0xC5, 0xFA, 0x10, 0x5C, 0x19, 0x14, 0x8B, 0x5D, 0xF0, 0x8B,
	0x4D, 0xE8, 0xC5, 0xFA, 0x10, 0x64, 0x19, 0x18, 0x8B, 0x5D, 0xF0, 0x8B,
	0x4D, 0xE8, 0xC5, 0xFA, 0x10, 0x6C, 0x19, 0x1C, 0x8B, 0x4D, 0xC8, 0xC5,
	0xFA, 0x11, 0x9C, 0x88, 0xBC, 0x00, 0x00, 0x00, 0xC5, 0xFA, 0x11, 0xA4,
	0x88, 0xC0, 0x00, 0x00, 0x00, 0x89, 0x45, 0xB8, 0xC5, 0xFA, 0x11, 0xAC,
	0x88, 0xC4, 0x00, 0x00, 0x00, 0x8B, 0x45, 0xC4, 0x8D, 0x04, 0x40, 0xC1,
	0xE0, 0x04, 0x8B, 0x4D, 0xBC, 0xC5, 0xFA, 0x10, 0x74, 0x01, 0x0C, 0xC5,
	0xFA, 0x10, 0x7C, 0x01, 0x1C, 0xC5, 0xCA, 0x58, 0xF6, 0xC5, 0xD2, 0x58,
	0xD2, 0xC5, 0xEA, 0x59, 0x6C, 0x01, 0x08, 0xC5, 0xD2, 0x58, 0xEE, 0xC5,
	0xDA, 0x58, 0xC9, 0xC5, 0xF2, 0x59, 0x64, 0x01, 0x04, 0xC5, 0xE2, 0x58,
	0xC0, 0xC5, 0xFA, 0x59, 0x1C, 0x01, 0xC5, 0xDA, 0x58, 0xDB, 0xC5, 0xE2,
	0x58, 0xDD, 0xC5, 0xC2, 0x58, 0xE7, 0xC5, 0xEA, 0x59, 0x6C, 0x01, 0x18,
	0xC5, 0xF2, 0x59, 0x74, 0x01, 0x14, 0xC5, 0xFA, 0x59, 0x7C, 0x01, 0x10,
	0xC5, 0xD2, 0x58, 0xE4, 0xC5, 0xCA, 0x58, 0xEF, 0xC5, 0xD2, 0x58, 0xE4,
	0xC5, 0xFA, 0x10, 0x6C, 0x01, 0x2C, 0xC5, 0xD2, 0x58, 0xED, 0xC5, 0xEA,
	0x59, 0x54, 0x01, 0x28, 0xC5, 0xEA, 0x58, 0xD5, 0xC5, 0xF2, 0x59, 0x4C,
	0x01, 0x24, 0xC5, 0xFA, 0x59, 0x44, 0x01, 0x20, 0xC5, 0xF2, 0x58, 0xC0,
	0xC5, 0xFA, 0x58, 0xC2, 0xC5, 0xFA, 0x10, 0x4D, 0xA8, 0xC5, 0xE2, 0x59,
	0xD1, 0xC5, 0xDA, 0x59, 0xD9, 0xC5, 0xFA, 0x59, 0xC9, 0x8B, 0x42, 0x30,
	0x85, 0xC0, 0xC5, 0xFA, 0x11, 0x55, 0xF0, 0xC5, 0xFA, 0x11, 0x5D, 0xE0,
	0xC5, 0xFA, 0x11, 0x4D, 0xDC, 0x74, 0x5F, 0x83, 0xEC, 0x1C, 0xC5, 0xFA,
	0x11, 0x4C, 0x24, 0x14, 0xC5, 0xFA, 0x11, 0x5C, 0x24, 0x10, 0xC5, 0xFA,
	0x11, 0x54, 0x24, 0x0C, 0xC5, 0xFA, 0x10, 0x45, 0xD8, 0xC5, 0xFA, 0x11,
	0x44, 0x24, 0x08, 0xC5, 0xFA, 0x10, 0x45, 0xD4, 0xC5, 0xFA, 0x11, 0x44,
	0x24, 0x04, 0xC5, 0xFA, 0x10, 0x45, 0xD0, 0xC5, 0xFA, 0x11, 0x04, 0x24,
	0xC7, 0x44, 0x24, 0x18, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xC5, 0xFA,
	0x10, 0x4D, 0xDC, 0xC5, 0xFA, 0x10, 0x5D, 0xE0, 0xC5, 0xFA, 0x10, 0x55,
	0xF0, 0x8B, 0x55, 0xEC, 0x83, 0xC4, 0x1C, 0x84, 0xC0, 0x74, 0x07, 0x31,
	0xC9, 0xE9, 0xCB, 0x00, 0x00, 0x00, 0x8B, 0x42, 0x24, 0x89, 0x45, 0xAC,
	0xC5, 0xFA, 0x10, 0x45, 0xD0, 0xC5, 0xFA, 0x11, 0x45, 0x9C, 0xC5, 0xFA,
	0x10, 0x45, 0xD4, 0xC5, 0xFA, 0x11, 0x45, 0xA0, 0xC5, 0xFA, 0x10, 0x45,
	0xD8, 0xC5, 0xFA, 0x11, 0x45, 0xA4, 0xC5, 0xFA, 0x11, 0x55, 0x90, 0xC5,
	0xFA, 0x11, 0x5D, 0x94, 0xC5, 0xFA, 0x11, 0x4D, 0x98, 0x31, 0xDB, 0x8B,
	0x45, 0xCC, 0x8D, 0x4D, 0x9C, 0x8D, 0x55, 0x90, 0x8D, 0xBD, 0x3C, 0xFF,
	0xFF, 0xFF, 0x57, 0x6A, 0x06, 0x50, 0x68, 0x09, 0x40, 0x00, 0x46, 0xFF,
	0x55, 0xAC, 0x83, 0xC4, 0x10, 0x8B, 0x45, 0x88, 0x8B, 0x7D, 0xB0, 0x39,
	0xF8, 0x0F, 0x94, 0xC2, 0xF6, 0x85, 0x72, 0xFF, 0xFF, 0xFF, 0x01, 0x0F,
	0x94, 0xC1, 0x20, 0xD1, 0x80, 0xFB, 0x01, 0x77, 0x4A, 0x84, 0xC9, 0xC5,
	0xFA, 0x10, 0x55, 0xF0, 0xC5, 0xFA, 0x10, 0x5D, 0xE0, 0xC5, 0xFA, 0x10,
	0x4D, 0xDC, 0x75, 0x46, 0x0F, 0xB7, 0x8D, 0x7E, 0xFF, 0xFF, 0xFF, 0xF7,
	0xC1, 0x10, 0x80, 0x00, 0x00, 0x74, 0x24, 0x83, 0xE1, 0x10, 0x66, 0x83,
	0xF9, 0x01, 0x80, 0xDB, 0x00, 0x80, 0xC3, 0x02, 0x8D, 0x95, 0x48, 0xFF,
	0xFF, 0xFF, 0x8B, 0x4A, 0x08, 0x89, 0x4D, 0xA4, 0xC5, 0xFB, 0x10, 0x02,
	0xC5, 0xFB, 0x11, 0x45, 0x9C, 0xEB, 0x83, 0x31, 0xC9, 0xEB, 0x0F, 0xC5,
	0xFA, 0x10, 0x55, 0xF0, 0xC5, 0xFA, 0x10, 0x5D, 0xE0, 0xC5, 0xFA, 0x10,
	0x4D, 0xDC, 0x8B, 0x55, 0xEC, 0x8B, 0x45, 0xC0, 0x8B, 0x5D, 0xB8, 0x88,
	0x8C, 0x18, 0x88, 0x00, 0x00, 0x00, 0x89, 0xC1, 0x8B, 0x45, 0xC4, 0x89,
	0x44, 0x8B, 0x48, 0x8B, 0x45, 0xC8, 0xC5, 0xFA, 0x11, 0x54, 0x83, 0x58,
	0xC5, 0xFA, 0x11, 0x5C, 0x83, 0x5C, 0xC5, 0xFA, 0x11, 0x4C, 0x83, 0x60,
	0x41, 0x8B, 0x5D, 0xB4, 0x89, 0xD8, 0x04, 0xFE, 0x84, 0xDB, 0x0F, 0xB6,
	0xD8, 0xB8, 0x06, 0x00, 0x00, 0x00, 0x0F, 0x44, 0xD8, 0x89, 0xD8, 0x83,
	0xF9, 0x04, 0x0F, 0x85, 0x2E, 0xFD, 0xFF, 0xFF, 0x89, 0xF8, 0x8B, 0x5D,
	0x0C, 0xEB, 0x3E, 0x69, 0xC6, 0xAC, 0x00, 0x00, 0x00, 0xC6, 0x44, 0x02,
	0x44, 0x00, 0x69, 0xC6, 0xAC, 0x00, 0x00, 0x00, 0xC7, 0x84, 0x02, 0x88,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x89, 0xF8, 0xEB, 0x1E, 0x8B,
	0x42, 0x1C, 0x89, 0xF1, 0xC1, 0xE1, 0x04, 0x8B, 0x3C, 0x08, 0x31, 0xC0,
	0x85, 0xFF, 0x74, 0x0D, 0x8B, 0x4A, 0x18, 0x80, 0x3C, 0x39, 0x00, 0x0F,
	0x84, 0x28, 0xFC, 0xFF, 0xFF, 0x69, 0xCE, 0xAC, 0x00, 0x00, 0x00, 0x89,
	0x44, 0x0A, 0x40, 0x46, 0x83, 0xFE, 0x40, 0x75, 0xD2, 0x83, 0xEC, 0x08,
	0x89, 0x5C, 0x24, 0x04, 0xC5, 0xFA, 0x10, 0x45, 0x08, 0xC5, 0xFA, 0x11,
	0x04, 0x24, 0xFF, 0x52, 0x3C, 0x81, 0xC4, 0xB8, 0x00, 0x00, 0x00, 0x5E,
	0x5F, 0x5B, 0x5D, 0xC2, 0x08, 0x00
};

uint8_t CrtMoveShell[] = {
	0x55, 0x89, 0xE5, 0x53, 0x57, 0x56, 0x81, 0xEC, 0xBC, 0x00, 0x00, 0x00,
	0x8B, 0x75, 0x0C, 0xC5, 0xFA, 0x10, 0x45, 0x08, 0xBF, 0x00, 0x00, 0x00,
	0x00, 0x83, 0xEC, 0x08, 0x89, 0x74, 0x24, 0x04, 0xC5, 0xFA, 0x11, 0x04,
	0x24, 0xFF, 0x57, 0x3C, 0x88, 0x45, 0xEF, 0x83, 0x7E, 0x04, 0x00, 0x0F,
	0x84, 0xD2, 0x04, 0x00, 0x00, 0x8B, 0x47, 0x18, 0x8B, 0x4F, 0x38, 0x8B,
	0x09, 0xC1, 0xE1, 0x04, 0x8B, 0x0C, 0x08, 0xBB, 0x00, 0x00, 0x01, 0x00,
	0x23, 0x5E, 0x30, 0x80, 0xBF, 0x40, 0x2B, 0x00, 0x00, 0x00, 0x89, 0x4D,
	0xDC, 0x75, 0x2C, 0x85, 0xDB, 0x74, 0x28, 0xC7, 0x85, 0x38, 0xFF, 0xFF,
	0xFF, 0x32, 0x00, 0x00, 0x00, 0x8B, 0x47, 0x08, 0x8B, 0x00, 0x8B, 0x80,
	0x98, 0x00, 0x00, 0x00, 0x8B, 0x4F, 0x08, 0x31, 0xD2, 0x52, 0x52, 0x52,
	0xFF, 0xB5, 0x38, 0xFF, 0xFF, 0xFF, 0xFF, 0xD0, 0x8B, 0x4D, 0xDC, 0xC1,
	0xEB, 0x10, 0x88, 0x9F, 0x40, 0x2B, 0x00, 0x00, 0x31, 0xF6, 0x85, 0xC9,
	0x89, 0xFB, 0x74, 0x09, 0x8B, 0x43, 0x14, 0x80, 0x3C, 0x08, 0x00, 0x74,
	0x0C, 0xC7, 0x45, 0xE8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0x30, 0x04, 0x00,
	0x00, 0x8B, 0x03, 0x83, 0x3C, 0x08, 0x00, 0x7E, 0xEC, 0x8B, 0x43, 0x0C,
	0x83, 0x3C, 0x08, 0x00, 0x75, 0xE3, 0x8B, 0x43, 0x2C, 0xC5, 0xFA, 0x10,
	0x04, 0x08, 0xC5, 0xFA, 0x10, 0x4C, 0x08, 0x04, 0x8B, 0x53, 0x10, 0xC5,
	0xFA, 0x58, 0x04, 0x0A, 0xC5, 0xFA, 0x11, 0x45, 0xC4, 0x89, 0xCF, 0x8B,
	0x4B, 0x28, 0xC5, 0xF2, 0x58, 0x44, 0x3A, 0x04, 0xC5, 0xFA, 0x11, 0x45,
	0xC8, 0xC5, 0xFA, 0x10, 0x44, 0x38, 0x08, 0xC5, 0xFA, 0x58, 0x44, 0x3A,
	0x08, 0xC5, 0xFA, 0x11, 0x45, 0xCC, 0xB0, 0x01, 0x89, 0x45, 0xE8, 0x85,
	0xC9, 0x0F, 0x84, 0xD6, 0x03, 0x00, 0x00, 0x8B, 0x45, 0x0C, 0x8B, 0x40,
	0x30, 0xA8, 0x02, 0x74, 0x0D, 0x8B, 0x55, 0xDC, 0x83, 0x3C, 0x11, 0xFF,
	0x0F, 0x84, 0xFD, 0x03, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x40, 0x00, 0x8B,
	0x4D, 0x0C, 0x89, 0x41, 0x30, 0xE9, 0xAF, 0x03, 0x00, 0x00, 0x8B, 0x0B,
	0x83, 0x3C, 0x39, 0x00, 0x0F, 0x8E, 0xC1, 0x03, 0x00, 0x00, 0x8B, 0x4B,
	0x0C, 0x83, 0x3C, 0x39, 0x00, 0x0F, 0x85, 0xB4, 0x03, 0x00, 0x00, 0x8B,
	0x4B, 0x34, 0x80, 0x3C, 0x39, 0x00, 0x0F, 0x85, 0xA7, 0x03, 0x00, 0x00,
	0x80, 0x7D, 0xE8, 0x00, 0x0F, 0x84, 0x5F, 0x03, 0x00, 0x00, 0x8B, 0x43,
	0x04, 0x85, 0xC0, 0x74, 0x26, 0x8B, 0x0C, 0x38, 0x89, 0x4D, 0xF0, 0x69,
	0xCE, 0xAC, 0x00, 0x00, 0x00, 0x89, 0x4D, 0xE0, 0x8B, 0x4D, 0xDC, 0x8B,
	0x55, 0xF0, 0x3B, 0x14, 0x08, 0x8B, 0x45, 0xE0, 0x0F, 0x94, 0x44, 0x03,
	0x44, 0x0F, 0x84, 0x3D, 0x03, 0x00, 0x00, 0x8B, 0x43, 0x24, 0x8B, 0x04,
	0x38, 0x89, 0x45, 0xB4, 0x85, 0xC0, 0x0F, 0x84, 0x2C, 0x03, 0x00, 0x00,
	0x8B, 0x43, 0x1C, 0x8B, 0x04, 0x38, 0x85, 0xC0, 0x0F, 0x84, 0x1E, 0x03,
	0x00, 0x00, 0x8B, 0x00, 0x85, 0xC0, 0x0F, 0x84, 0x14, 0x03, 0x00, 0x00,
	0x8B, 0x88, 0xB0, 0x00, 0x00, 0x00, 0x85, 0xC9, 0x0F, 0x84, 0x06, 0x03,
	0x00, 0x00, 0x8B, 0x54, 0x01, 0x08, 0x85, 0xD2, 0x0F, 0x84, 0xFA, 0x02,
	0x00, 0x00, 0x01, 0xC1, 0x01, 0xCA, 0x31, 0xC9, 0x31, 0xC0, 0x89, 0x5D,
	0xB8, 0x89, 0x7D, 0xAC, 0x89, 0x55, 0xD4, 0x89, 0x4D, 0xD8, 0x89, 0x45,
	0xB0, 0x0F, 0xB6, 0xC0, 0x89, 0xC1, 0xC1, 0xE1, 0x06, 0x8D, 0x0C, 0x81,
	0x89, 0x4D, 0xF0, 0x8B, 0x04, 0x0A, 0x89, 0x45, 0xBC, 0xC7, 0x45, 0xA4,
	0x00, 0x00, 0x00, 0x3F, 0xC5, 0xFA, 0x10, 0x44, 0x0A, 0x08, 0xC5, 0xFA,
	0x10, 0x4C, 0x0A, 0x0C, 0xC5, 0xFA, 0x10, 0x54, 0x0A, 0x10, 0x69, 0xC6,
	0xAC, 0x00, 0x00, 0x00, 0x01, 0xD8, 0x8B, 0x4D, 0xD8, 0x8D, 0x0C, 0x49,
	0x89, 0x4D, 0xC0, 0xC5, 0xFA, 0x11, 0x84, 0x88, 0x8C, 0x00, 0x00, 0x00,
	0xC5, 0xFA, 0x11, 0x8C, 0x88, 0x90, 0x00, 0x00, 0x00, 0xC5, 0xFA, 0x11,
	0x94, 0x88, 0x94, 0x00, 0x00, 0x00, 0x8B, 0x4D, 0xF0, 0xC5, 0xFA, 0x10,
	0x5C, 0x0A, 0x14, 0x8B, 0x4D, 0xF0, 0xC5, 0xFA, 0x10, 0x64, 0x0A, 0x18,
	0x8B, 0x4D, 0xF0, 0xC5, 0xFA, 0x10, 0x6C, 0x0A, 0x1C, 0x8B, 0x4D, 0xC0,
	0xC5, 0xFA, 0x11, 0x9C, 0x88, 0xBC, 0x00, 0x00, 0x00, 0xC5, 0xFA, 0x11,
	0xA4, 0x88, 0xC0, 0x00, 0x00, 0x00, 0x89, 0x45, 0xE4, 0xC5, 0xFA, 0x11,
	0xAC, 0x88, 0xC4, 0x00, 0x00, 0x00, 0x8B, 0x45, 0xBC, 0x8D, 0x04, 0x40,
	0xC1, 0xE0, 0x04, 0x8B, 0x4D, 0xB4, 0xC5, 0xFA, 0x10, 0x74, 0x01, 0x0C,
	0xC5, 0xFA, 0x10, 0x7C, 0x01, 0x1C, 0xC5, 0xCA, 0x58, 0xF6, 0xC5, 0xD2,
	0x58, 0xD2, 0xC5, 0xEA, 0x59, 0x6C, 0x01, 0x08, 0xC5, 0xD2, 0x58, 0xEE,
	0xC5, 0xDA, 0x58, 0xC9, 0xC5, 0xF2, 0x59, 0x64, 0x01, 0x04, 0xC5, 0xE2,
	0x58, 0xC0, 0xC5, 0xFA, 0x59, 0x1C, 0x01, 0xC5, 0xDA, 0x58, 0xDB, 0xC5,
	0xE2, 0x58, 0xDD, 0xC5, 0xC2, 0x58, 0xE7, 0xC5, 0xEA, 0x59, 0x6C, 0x01,
	0x18, 0xC5, 0xF2, 0x59, 0x74, 0x01, 0x14, 0xC5, 0xFA, 0x59, 0x7C, 0x01,
	0x10, 0xC5, 0xD2, 0x58, 0xE4, 0xC5, 0xCA, 0x58, 0xEF, 0xC5, 0xD2, 0x58,
	0xE4, 0xC5, 0xFA, 0x10, 0x6C, 0x01, 0x2C, 0xC5, 0xD2, 0x58, 0xED, 0xC5,
	0xEA, 0x59, 0x54, 0x01, 0x28, 0xC5, 0xEA, 0x58, 0xD5, 0xC5, 0xF2, 0x59,
	0x4C, 0x01, 0x24, 0xC5, 0xFA, 0x59, 0x44, 0x01, 0x20, 0xC5, 0xF2, 0x58,
	0xC0, 0xC5, 0xFA, 0x58, 0xC2, 0xC5, 0xFA, 0x10, 0x4D, 0xA4, 0xC5, 0xE2,
	0x59, 0xD1, 0xC5, 0xDA, 0x59, 0xD9, 0xC5, 0xFA, 0x59, 0xC9, 0x8B, 0x43,
	0x30, 0x85, 0xC0, 0xC5, 0xFA, 0x11, 0x55, 0xF0, 0xC5, 0xFA, 0x11, 0x5D,
	0xE0, 0xC5, 0xFA, 0x11, 0x4D, 0xD0, 0x74, 0x5F, 0x83, 0xEC, 0x1C, 0xC5,
	0xFA, 0x11, 0x4C, 0x24, 0x14, 0xC5, 0xFA, 0x11, 0x5C, 0x24, 0x10, 0xC5,
	0xFA, 0x11, 0x54, 0x24, 0x0C, 0xC5, 0xFA, 0x10, 0x45, 0xCC, 0xC5, 0xFA,
	0x11, 0x44, 0x24, 0x08, 0xC5, 0xFA, 0x10, 0x45, 0xC8, 0xC5, 0xFA, 0x11,
	0x44, 0x24, 0x04, 0xC5, 0xFA, 0x10, 0x45, 0xC4, 0xC5, 0xFA, 0x11, 0x04,
	0x24, 0xC7, 0x44, 0x24, 0x18, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xC5,
	0xFA, 0x10, 0x4D, 0xD0, 0xC5, 0xFA, 0x10, 0x5D, 0xE0, 0xC5, 0xFA, 0x10,
	0x55, 0xF0, 0x83, 0xC4, 0x1C, 0x84, 0xC0, 0x74, 0x0A, 0x31, 0xC9, 0x8B,
	0x55, 0xD4, 0xE9, 0xCE, 0x00, 0x00, 0x00, 0x8B, 0x43, 0x20, 0x89, 0x45,
	0xA8, 0xC5, 0xFA, 0x10, 0x45, 0xC4, 0xC5, 0xFA, 0x11, 0x45, 0x98, 0xC5,
	0xFA, 0x10, 0x45, 0xC8, 0xC5, 0xFA, 0x11, 0x45, 0x9C, 0xC5, 0xFA, 0x10,
	0x45, 0xCC, 0xC5, 0xFA, 0x11, 0x45, 0xA0, 0xC5, 0xFA, 0x11, 0x55, 0x8C,
	0xC5, 0xFA, 0x11, 0x5D, 0x90, 0xC5, 0xFA, 0x11, 0x4D, 0x94, 0x31, 0xDB,
	0x8B, 0x45, 0xDC, 0x8D, 0x4D, 0x98, 0x8D, 0x55, 0x8C, 0x8D, 0xBD, 0x38,
	0xFF, 0xFF, 0xFF, 0x57, 0x6A, 0x06, 0x50, 0x68, 0x09, 0x40, 0x00, 0x46,
	0xFF, 0x55, 0xA8, 0x83, 0xC4, 0x10, 0x8B, 0x45, 0x84, 0x8B, 0x7D, 0xAC,
	0x39, 0xF8, 0x0F, 0x94, 0xC2, 0xF6, 0x85, 0x6E, 0xFF, 0xFF, 0xFF, 0x01,
	0x0F, 0x94, 0xC1, 0x20, 0xD1, 0x80, 0xFB, 0x01, 0x77, 0x4D, 0x84, 0xC9,
	0x8B, 0x55, 0xD4, 0xC5, 0xFA, 0x10, 0x55, 0xF0, 0xC5, 0xFA, 0x10, 0x5D,
	0xE0, 0xC5, 0xFA, 0x10, 0x4D, 0xD0, 0x75, 0x49, 0x0F, 0xB7, 0x8D, 0x7A,
	0xFF, 0xFF, 0xFF, 0xF7, 0xC1, 0x10, 0x80, 0x00, 0x00, 0x74, 0x24, 0x83,
	0xE1, 0x10, 0x66, 0x83, 0xF9, 0x01, 0x80, 0xDB, 0x00, 0x80, 0xC3, 0x02,
	0x8D, 0x95, 0x44, 0xFF, 0xFF, 0xFF, 0x8B, 0x4A, 0x08, 0x89, 0x4D, 0xA0,
	0xC5, 0xFB, 0x10, 0x02, 0xC5, 0xFB, 0x11, 0x45, 0x98, 0xEB, 0x80, 0x31,
	0xC9, 0xEB, 0x12, 0x8B, 0x55, 0xD4, 0xC5, 0xFA, 0x10, 0x55, 0xF0, 0xC5,
	0xFA, 0x10, 0x5D, 0xE0, 0xC5, 0xFA, 0x10, 0x4D, 0xD0, 0x8B, 0x45, 0xE4,
	0x8B, 0x5D, 0xD8, 0x88, 0x8C, 0x03, 0x88, 0x00, 0x00, 0x00, 0x8B, 0x45,
	0xBC, 0x8B, 0x4D, 0xE4, 0x8B, 0x5D, 0xD8, 0x89, 0x44, 0x99, 0x48, 0x8B,
	0x4D, 0xC0, 0x8B, 0x45, 0xE4, 0xC5, 0xFA, 0x11, 0x54, 0x88, 0x58, 0x8B,
	0x45, 0xE4, 0xC5, 0xFA, 0x11, 0x5C, 0x88, 0x5C, 0x8B, 0x45, 0xE4, 0xC5,
	0xFA, 0x11, 0x4C, 0x88, 0x60, 0x8B, 0x4D, 0xD8, 0x41, 0x8B, 0x5D, 0xB0,
	0x89, 0xD8, 0x04, 0xFE, 0x84, 0xDB, 0x0F, 0xB6, 0xD8, 0xB8, 0x06, 0x00,
	0x00, 0x00, 0x0F, 0x44, 0xD8, 0x89, 0xD8, 0x83, 0xF9, 0x04, 0x8B, 0x5D,
	0xB8, 0x0F, 0x85, 0x24, 0xFD, 0xFF, 0xFF, 0xEB, 0x1C, 0x69, 0xC6, 0xAC,
	0x00, 0x00, 0x00, 0xC6, 0x44, 0x03, 0x44, 0x00, 0x69, 0xC6, 0xAC, 0x00,
	0x00, 0x00, 0xC7, 0x84, 0x03, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x89, 0xF8, 0xEB, 0x1E, 0x8B, 0x43, 0x18, 0x89, 0xF1, 0xC1, 0xE1,
	0x04, 0x8B, 0x3C, 0x08, 0x31, 0xC0, 0x85, 0xFF, 0x74, 0x0D, 0x8B, 0x4B,
	0x14, 0x80, 0x3C, 0x39, 0x00, 0x0F, 0x84, 0x33, 0xFC, 0xFF, 0xFF, 0x69,
	0xCE, 0xAC, 0x00, 0x00, 0x00, 0x89, 0x44, 0x0B, 0x40, 0x46, 0x83, 0xFE,
	0x40, 0x75, 0xD2, 0x8A, 0x45, 0xEF, 0x81, 0xC4, 0xBC, 0x00, 0x00, 0x00,
	0x5E, 0x5F, 0x5B, 0x5D, 0xC2, 0x08, 0x00, 0x83, 0xE0, 0xFD, 0x8B, 0x4D,
	0x0C, 0x66, 0x83, 0x79, 0x44, 0x00, 0x78, 0x15, 0x0F, 0x84, 0xF0, 0xFB,
	0xFF, 0xFF, 0x8B, 0x4D, 0x0C, 0xC7, 0x41, 0x28, 0x00, 0x00, 0xE1, 0x43,
	0xE9, 0xE1, 0xFB, 0xFF, 0xFF, 0xC7, 0x41, 0x28, 0x00, 0x00, 0xE1, 0xC3,
	0xE9, 0xD5, 0xFB, 0xFF, 0xFF
};

enum Hitbox {
	Hitbox_Head,
	Hitbox_Chest,
	Hitbox_Stomach,
	Hitbox_Pelvis
};

class PlayerCache
{
private:
	uint32_t Ptr;
public:
	bool IsTeam;
	int HitBoxBoneId[4];
	Vector3 HitBoxPos[4];
	bool HitBoxVisible[4];
	Vector3 HitBoxBbMin[4];
	Vector3 HitBoxBbMax[4];

	//func
	bool Valid() const {
		return Ptr;
	}

	auto GetPtr(uint32_t Off = 0) const {
		return Valid() ? this->Ptr + Off : 0;
	}

	Vector3 GetHibox(int a) {
		return HitBoxPos[a];
	}

	bool IsVisible() {
		return *(uint32_t*)&HitBoxVisible;
	}

	bool IsVisible(int a) {
		return HitBoxVisible[a];
	}

	int GetBoneByHitBox(int a) {
		return HitBoxBoneId[a];
	}

	auto GetBByHitBox(int a) {
		return std::make_pair(HitBoxBbMin[a], HitBoxBbMax[a]);
	}
} *Players;

void InitCreateMove()
{
	//CreateMove vars
	struct CrtMoveData 
	{
		uint32_t m_iHealth;
		uint32_t m_iTeamNum;
		uint32_t dwCHLClient;
		uint32_t m_lifeState;
		uint32_t m_vecOrigin;
		uint32_t b_IsDormant;
		uint32_t dwEntityList;
		uint32_t m_pStudioHdr;
		uint32_t TraceLineUtil;
		uint32_t m_dwBoneMatrix;
		uint32_t m_hGroundEntity;
		uint32_t m_vecViewOffset;
		uint32_t dwSmokeCheckUtil;
		uint32_t m_bGunGameImmunity;
		uint32_t GetLocalPlayerIdPtr;
		uint32_t CrtMoveOrg;
	} hkVars;
	hkVars.GetLocalPlayerIdPtr = Off.dwClientState + Off.dwClientState_GetLocalPlayer;
	hkVars.m_bGunGameImmunity = Off.m_bGunGameImmunity;
	hkVars.dwSmokeCheckUtil = Off.dwSmokeCheckUtil;
	hkVars.m_lifeState = Off.m_lifeState;
	hkVars.m_vecOrigin = Off.m_vecOrigin;
	hkVars.b_IsDormant = Off.b_IsDormant;
	hkVars.dwEntityList = Off.dwEntityList;
	hkVars.TraceLineUtil = Off.dwTraceLineUtil;
	hkVars.m_vecViewOffset = Off.m_vecViewOffset;
	hkVars.m_hGroundEntity = Off.m_hGroundEntity;
	hkVars.m_dwBoneMatrix = Off.m_dwBoneMatrix;
	hkVars.m_pStudioHdr = Off.m_pStudioHdr;
	hkVars.dwCHLClient = Off.dwCHLClient;
	hkVars.m_iTeamNum = Off.m_iTeamNum;
	hkVars.m_iHealth = Off.m_iHealth;

	//get org	
	const int CreateMoveIndx = 24;
	HookMgr::ClientMode.Setup(Off.dwIClientMode);
	hkVars.CrtMoveOrg = HookMgr::ClientMode.GetFunc(CreateMoveIndx);
	
	//write mem
	auto hk = HookMgr::CreateMove.Alloc(&CrtMoveShell, sizeof(CrtMoveShell), &hkVars, sizeof(hkVars), 21, 0x3000);
	
	//set hook
	HookMgr::ClientMode.SetupHook(CreateMoveIndx, hk.second);

	//set shared data players ptr
	Players = (PlayerCache*)(hk.first + sizeof(hkVars));
}